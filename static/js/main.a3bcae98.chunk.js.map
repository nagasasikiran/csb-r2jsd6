{"version":3,"sources":["components/Learn/HOC/Button/buttonHOC.js","pathInfo.js","components/DataGrid/index.js","components/Keyboard/timer.js","components/Keyboard/notes.js","components/Keyboard/Stave.js","components/Keyboard/index.js","components/Learn/HOC/Todos/fetchfilterHOC.js","components/Learn/HOC/Button/styles.js","components/Learn/HOC/Todos/users.js","components/Learn/HOC/Todos/todos.js","components/Learn/HOC/Button/buttonOne.js","components/Learn/UseRef/index.js","components/Learn/UseEffect/index.js","components/Learn/UseMemo/index.js","components/Learn/AsyncAwait/index.js","components/Learn/index.js","components/Feature2StepDef/index.js","App.js","index.js"],"names":["IncomingComponent","Routing","map","c","JSON","parse","DataGrid","useState","Date","startDate","setStartDate","days","months","locale","localize","day","n","month","formatLong","date","Container","selected","onChange","Completionist","renderer","hours","minutes","seconds","completed","Timer","Alert","variant","now","Notes","type","beat","values","vals","v","i","className","console","log","Staves","beats","counter","updateCounter","rArray","updateRarray","note","counting","useEffect","document","addEventListener","e","keyCode","Array","Math","floor","random","Row","Col","md","filter","_","Keyboard","isDummy","noteType","setNoteType","loadNotes","nArray","push","link","onClick","Stave","FetchfilterHOC","WrappedComponent","entity","props","data","setData","term","setTerm","fetchData","a","fetch","res","json","isUser","displayList","slice","d","name","indexOf","title","item","id","value","target","MyStyles","sampleText","default","color","backgroundColor","disabled","ButtonHOC","_styles","style","args","UseRef","initXY","x","y","UseEffect","xy","setXY","time","updateTime","handle","setInterval","clearInterval","window","clientX","clientY","UseMemo","init","followers","public_repos","AsyncAwait","info","setInfo","getDetails","response","Learn","showView","Feature2StepDef","setDefData","pageName","setPageName","generatedCode","setGeneratedCode","locaters","setLocaters","generateStepDefinition","splitE","split","startCode","argConstructor","login","click","selects","types","hasKey","Object","keys","k","newE","newString","ignoreWords","val","replace","replaceAll","includes","functionArgs","length","reverseArgs","join","reverse","placeholder","lineArray","charAt","finalData","lne","GLayout","NavItems","key","path","component","exact","Nav","Link","href","Navbar","collapseOnSelect","fixed","expand","bg","Collapse","App","element","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3bcae98.chunk.js","sourcesContent":["import MyStyles from \"./styles.js\";\r\n\r\n// const HOCupdates = (props) => {\r\n//     let _styles = {...MyStyles.default};\r\n//     if(props.disabled) {\r\n//         _styles = {..._styles, ...MyStyles.disabled}\r\n//     }\r\n//     return _styles\r\n// }\r\n\r\n//export default WrappedComponent => args => WrappedComponent(HOCupdates(args));\r\n\r\n// export default (IncomingComponent) => {\r\n//     return function renderFunc(args) {\r\n//         return IncomingComponent(HOCupdates(args))\r\n//     }\r\n// }\r\n\r\nexport default (IncomingComponent) => {\r\n  return (args) => {\r\n    let _styles = { ...MyStyles.default };\r\n    if (args.disabled) {\r\n      _styles = { ..._styles, ...MyStyles.disabled };\r\n    }\r\n    return <IncomingComponent _styles={_styles} />;\r\n  };\r\n};\r\n","let Routing = [\"DataGrid\", \"Keyboard\", \"Learn\"].map((c) =>\r\n  JSON.parse(\r\n    `{\"path\":\"${c}\", \"component\": \"${c}\", \"exact\": \"false\", \"name\": \"${c}\"}`\r\n  )\r\n);\r\nexport default Routing;\r\n","import { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst DataGrid = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const days = [\"Pt\", \"Sa\", \"Ça\", \"Pe\", \"Cu\", \"Ct\", \"Pz\"];\r\n  const months = [\r\n    \"Ocak\",\r\n    \"Şubat\",\r\n    \"Mart\",\r\n    \"Nisan\",\r\n    \"Mayıs\",\r\n    \"Haziran\",\r\n    \"Temmuz\",\r\n    \"Ağustos\",\r\n    \"Eylül\",\r\n    \"Ekim\",\r\n    \"Kasım\",\r\n    \"Aralık\"\r\n  ];\r\n  const locale = {\r\n    localize: {\r\n      day: (n) => days[n],\r\n      month: (n) => months[n]\r\n    },\r\n    formatLong: {\r\n      date: () => \"mm/dd/yyyy\"\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>Data Grid Page </Container>\r\n      <DatePicker\r\n        locale={locale}\r\n        selected={startDate}\r\n        onChange={(date) => setStartDate(date)}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default DataGrid;\r\n","import {Alert} from 'react-bootstrap';\r\nimport Countdown from 'react-countdown';\r\n\r\n// Random component\r\nconst Completionist = () => <span>You are good to go!</span>;\r\n\r\n// Renderer callback with condition\r\nconst renderer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return <span>{minutes}:{seconds}</span>;\r\n  }\r\n};\r\n\r\n\r\nconst Timer = () =>\r\n  <Alert variant=\"success\">\r\n    <Countdown date={Date.now() + 60000} renderer={renderer} />\r\n  </Alert>\r\n\r\nexport default Timer;\r\n","const Notes = ({type, beat, values}) => {\r\n\r\n  let vals = values.map((v, i)=><li key={i} className={`${beat} ${v}`}></li>)\r\n  console.log(`Notes type: ${type} beat: ${beat} values: ${values}`);\r\n  return (\r\n    <section className=\"notes-container\">\r\n        <span className=\"trebleclef\"></span>\r\n        <span className={`note-type-${type}4`}></span>\r\n        <ul>\r\n          {vals}\r\n        </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Notes;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Notes from './notes.js';\r\nimport {Container, Row, Col, Alert} from 'react-bootstrap';\r\n\r\nconst Staves = ({type,beats}) => {\r\n  const [counter, updateCounter] = useState(1)\r\n  const [rArray, updateRarray] = useState(['c','f','d','rc']);\r\n  const note = ['c', 'd', 'e', 'f', 'g', 'a', 'b', 'rc'];\r\n  let counting = 2;\r\n  useEffect(()=>{\r\n    counting = 2;\r\n    document.addEventListener('keydown',e=>{\r\n      if(e.keyCode === 13) {\r\n        updateCounter(counting++);\r\n        updateRarray([...Array(beats)].map(i => note[Math.floor(Math.random() * 8) + 0]));\r\n      }\r\n    });\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}><Alert variant=\"success\">{counter}</Alert></Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col>\r\n          <Notes type={beats} beat={type} values={rArray.filter((_,i) => i < beats)} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Staves;\r\n","import {useState, useEffect} from 'react';\r\nimport {Container, Row, Col, Alert} from 'react-bootstrap';\r\nimport './notes.css';\r\nimport Timer from './timer';\r\nimport Staves from './Stave';\r\n\r\nconst Keyboard = ({isDummy}) => {\r\n  const [noteType, setNoteType] = useState(['chrochet',4]);\r\n  const links = ['chrochet', 'minim', 'semibreve'];\r\n  const beats = [4, 2, 1]\r\n  const loadNotes = (type, beat) => {\r\n    //console.log('Index ', `${type} ${beat}`);\r\n    let nArray = [];\r\n    nArray.push(type);\r\n    nArray.push(beat);\r\n    console.log('nArray',nArray);\r\n    setNoteType([...nArray]);\r\n  }\r\n  //console.log(props.isDummy)\r\n  return (\r\n    <>\r\n    {isDummy ? <div>Keyboard test page</div> :\r\n    <Container>\r\n      <Row>\r\n      <Col md={6}>\r\n        <Alert variant=\"success\">{links.map((link,i) => <a key={`links-${i}`} onClick={()=>loadNotes(link,beats[i])}>{link}</a>)}</Alert>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Alert variant=\"success\"><a onClick={()=>loadNotes(noteType[0],4)}>4/4</a> <a onClick={()=>loadNotes(noteType[0],3)}>3/4</a></Alert>\r\n      </Col>\r\n        <Col md={3}><Timer /></Col>\r\n      </Row>\r\n      <Staves type={noteType[0]} beats={noteType[1]} />\r\n    </Container>}\r\n    </>\r\n  )\r\n}\r\nexport default Keyboard;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst FetchfilterHOC = (WrappedComponent, entity) => {\r\n  return function FetchfilterHOC(props) {\r\n    const [data, setData] = useState([]);\r\n    const [term, setTerm] = useState(\"\");\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const res = await fetch(\r\n          `https://jsonplaceholder.typicode.com/${entity}`\r\n        );\r\n        const json = await res.json();\r\n        setData(json);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    const isUser = entity==='users';\r\n    console.log(isUser);\r\n    let displayList = data\r\n      .slice(0, 10)\r\n      .filter((d) => {\r\n            \r\n            if(entity === 'users') {\r\n                const {name} = d;\r\n                return name.indexOf(term) >= 0;\r\n            }\r\n            if(entity === 'todos') {\r\n                const {title} = d;;\r\n                return title.indexOf(term) >= 0\r\n            }\r\n        })  \r\n      .map((item, i) => <div key={item.id}>{isUser?item.name:item.title}</div>);\r\n    return (\r\n      <div>\r\n        <h2>{entity}</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={term}\r\n          onChange={(e) => {\r\n            setTerm(e.target.value);\r\n          }}\r\n        />\r\n        <WrappedComponent data={displayList} {...props} />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default FetchfilterHOC;\r\n","const MyStyles = {\r\n    default: {\r\n        color: '#fff',\r\n        backgroundColor: 'black'\r\n    },\r\n    disabled: {\r\n        backgroundColor: 'grey'\r\n    }\r\n}\r\n\r\nexport default MyStyles;","import FetchfilterHOC from \"./fetchfilterHOC\";\r\n\r\nconst UserWrap = ({data, sampleText}) => <div>{sampleText}{data}</div>;\r\nconst Users = FetchfilterHOC(UserWrap, 'users');\r\n\r\nexport default Users;","import FetchfilterHOC from './fetchfilterHOC.js';\r\n\r\nconst TodoWrap = ({data, sampleText}) => <div>{sampleText}{data}</div>;\r\nconst Todos = FetchfilterHOC(TodoWrap, 'todos');\r\n\r\nexport default Todos;\r\n","import ButtonHOC from \"./buttonHOC\"\r\nconst ButtonOne = ({_styles}) => <button style={_styles}>Test Button</button>\r\nexport default ButtonHOC(ButtonOne)","import { useRef } from \"react\";\r\n\r\nconst UseRef = () => {\r\n  return <div>Use Ref data</div>;\r\n};\r\n\r\nexport default UseRef;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst initXY = {\r\n  x: null,\r\n  y: null\r\n};\r\n\r\nconst UseEffect = () => {\r\n  const [xy, setXY] = useState(initXY);\r\n  const [time, updateTime] = useState(Date);\r\n\r\n  //Runs everytime component renders\r\n  useEffect(() => {\r\n    let handle = setInterval(() => {\r\n      updateTime(Date);\r\n    }, 1000);\r\n    return () => clearInterval(handle);\r\n  });\r\n\r\n  //Runs first time component renders\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      setXY({ x: e.clientX, y: e.clientY });\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <b>Event Handler is added when component loads</b> <br />\r\n      Mouse X: {xy.x}\r\n      <br />\r\n      Mouse Y: {xy.y}\r\n      <br />\r\n      <br />\r\n      <b>\r\n        Set Interval is called everytime component loads - return statement\r\n        clears interval\r\n      </b>{\" \"}\r\n      <br />\r\n      {time}\r\n    </div>\r\n  );\r\n\r\n  //Runs only when i updates\r\n};\r\n\r\nexport default UseEffect;\r\n","import { useState, useEffect, useMemo } from \"react\";\r\n\r\nconst UseMemo = () => {\r\n  return <div>UseMemo data</div>;\r\n};\r\n\r\nexport default UseMemo;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst init = {\r\n  followers: null,\r\n  public_repos: null\r\n};\r\nconst AsyncAwait = () => {\r\n  const [info, setInfo] = useState(init);\r\n  const getDetails = async () => {\r\n    let response = await fetch(\"https://api.github.com/users/gitmil\");\r\n    let json = await response.json();\r\n    setInfo({\r\n      followers: json.followers,\r\n      public_repos: json.public_repos\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h3>Async Await</h3>\r\n      Followers : {info.followers}\r\n      <br />\r\n      Public Repos : {info.public_repos}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AsyncAwait;\r\n","import { useState } from \"react\";\r\nimport Users from \"./HOC/Todos/users\";\r\nimport Todos from \"./HOC/Todos/todos\";\r\nimport ButtonOne from \"./HOC/Button/buttonOne\";\r\nimport UseRef from \"./UseRef\";\r\nimport UseEffect from \"./UseEffect\";\r\nimport UseMemo from \"./UseMemo\";\r\nimport AsyncAwait from \"./AsyncAwait\";\r\nimport \"./styles.css\";\r\n\r\nconst Learn = () => {\r\n  const [showView, setView] = useState(\"AsyncAwait\");\r\n  return (\r\n    <>\r\n      {(() => {\r\n        switch (showView) {\r\n          case \"todos\":\r\n            return;\r\n            <section className=\"info\">\r\n              <Users sampleText=\"For Users\" />\r\n              <Todos sampleText=\"For Todos\" />\r\n            </section>;\r\n          case \"buttonHOC\":\r\n            return <ButtonOne disabled />;\r\n          case \"UseEffect\":\r\n            return <UseEffect />;\r\n          case \"UseRef\":\r\n            return <UseRef />;\r\n          case \"UseMemo\":\r\n            return <UseMemo />;\r\n          case \"AsyncAwait\":\r\n            return <AsyncAwait />;\r\n        }\r\n      })()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n","import { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\n\r\nconst Feature2StepDef = () => {\r\n  const [defData, setDefData] = useState([]);\r\n  const [pageName, setPageName] = useState(\"\");\r\n  const [generatedCode, setGeneratedCode] = useState([]);\r\n  const [locaters, setLocaters] = useState([]);\r\n\r\n  const generateCode = (e) => {\r\n    /* Read 'Feature file' input value and \r\n            1. convert each line into an Array using '\\n'\r\n            2. make sure there is no spaces '\\t'\r\n            3. filter array and removes lines starting with 'Senario' and '#'\r\n        */\r\n    const lineArray = e.target.value\r\n      .split(\"\\n\")\r\n      .map((i) => i.replace(\"\\t\", \"\"))\r\n      .filter((i) => i.indexOf(\"Senario\") !== 0 && i.charAt(0) !== \"#\");\r\n    setDefData(lineArray);\r\n    let finalData = [];\r\n\r\n    //  Add generic import in to Step Definition file\r\n    finalData.push(\r\n      'import {Given, When, then, And} from \"cypress-cucumber-preprocessor/steps\"\\n'\r\n    );\r\n    finalData.push(\r\n      'import CommonDriver from \"../../pageObjects/classes/CommonDriver\";\\n\\n'\r\n    );\r\n    finalData.push(\"const commonDriver = new CommonDriver();\\n\\n\");\r\n\r\n    //  Generate Steps based on line Array\r\n    finalData.push(lineArray.map((lne) => generateStepDefinition(lne)));\r\n    setGeneratedCode(finalData);\r\n  };\r\n\r\n  const generateStepDefinition = (e) => {\r\n    /* Read e \r\n            1. Split e with ' ' and make sure any word with in \"\" is read as single word\r\n            2. after splitting filter if there are any blank values - just in case\r\n        */\r\n    const splitE = e.split(/([^\\s\"]+|\"[^\"]*\")+/g).filter((n) => n !== \"\");\r\n\r\n    //  Store 1st work - we will use it during concatination while generating final code\r\n    const startCode = splitE[0];\r\n\r\n    if (!startCode) {\r\n      return;\r\n    }\r\n    /*  Rules \r\n            1st Arg: function arguments\r\n            2nd Arg: Common function Name\r\n            3rd Arg: ReverseInArg or ReverseInFunc\r\n                        ReverseInArg: Print function Args Reverse in Args\r\n                        ReverseInFunc: Print function Args Reverse in common function Args\r\n    */\r\n    const argConstructor = {\r\n      login: [\"elmtNickName\", \"clickElmt\"],\r\n      click: [\"elmtNickName\", \"clickElmt\"],\r\n      'validates the \"presence\"': [\r\n        \"elmtState,elmtNickName\",\r\n        \"checkElementPresence\"\r\n      ],\r\n      \"validates the title\": [\"elmtNickName\", \"validatePageTitle\"],\r\n      selects: [\r\n        \"elmtNickName,valueToSelect\",\r\n        \"clickDropdownElmt\",\r\n        \"ReverseInArg\"\r\n      ],\r\n      types: [\"elmtNickName, dataValue\", \"enterData\"]\r\n    };\r\n\r\n    //  Identify if e has rules we definined - It has to match atleast one rule\r\n    const hasKey = Object.keys(argConstructor).filter((k) => e.indexOf(k) >= 0);\r\n\r\n    //  Remove 1st word from array (named splitE) and store remaining value in newE\r\n    const newE = splitE.slice(1);\r\n\r\n    // Traverse through all words in newE\r\n    let newString = \"\";\r\n\r\n    // Ignore string from adding to Locators JSON\r\n    let ignoreWords = [\"presence\", \"Home\"];\r\n\r\n    newString =\r\n      newString +\r\n      newE.map((i) => {\r\n        //  return words which are not in \"\"\r\n        if (i.indexOf('\"') !== 0) {\r\n          return i;\r\n        }\r\n\r\n        //  for the words which are in \"\" - Remove spaces between all words in \"\"\r\n        let val = i.replace(/\\s/g, \"\").replaceAll('\"', \"\");\r\n\r\n        //  store all locatoers in state except for word 'presence'\r\n        if (!ignoreWords.includes(val))\r\n          setLocaters((locaters) => [...locaters, `${val} : '',\\n`]);\r\n\r\n        //  return '{string}' for all words in \"\"\r\n        return \"{string}\";\r\n      });\r\n\r\n    //  replace all , with ' ' space\r\n    newString = newString.replaceAll(\",\", \" \");\r\n\r\n    //Reverse Args if needed - depends on 3rd rule argument\r\n    let functionArgs =\r\n      hasKey.length > 0\r\n        ? argConstructor[hasKey][2]\r\n          ? reverseArgs(argConstructor[hasKey][0], argConstructor[hasKey][2])\r\n          : argConstructor[hasKey][0]\r\n        : \"\";\r\n\r\n    //  generate step definition code\r\n    let finalObj =\r\n      hasKey.length > 0\r\n        ? `${startCode}(\"${newString}\",(${functionArgs}) => {\\n\\tcommonDriver.${argConstructor[hasKey][1]}(\"${pageName}\",${argConstructor[hasKey][0]});\\n})\\n\\n`\r\n        : `\\n/* Rules not matching for this lines\\n\\t${splitE.join(\r\n            \"\"\r\n          )}\\n*/\\n\\n`;\r\n\r\n    return finalObj;\r\n  };\r\n\r\n  //reverse args function\r\n  const reverseArgs = (val, type) =>\r\n    type === \"ReverseInArg\" ? val.split(\",\").reverse() : val;\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Page name\"\r\n            onChange={(e) => setPageName(e.target.value)}\r\n            value={pageName}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <br />\r\n          <strong>Feature File</strong>\r\n          <textarea\r\n            onChange={generateCode}\r\n            className=\"inputTxtarea\"\r\n            name=\"w3review\"\r\n            placeholder=\"Enter Feature data here\"\r\n          ></textarea>\r\n        </Col>\r\n\r\n        <Col>\r\n          <br />\r\n          <strong>Step Definition File</strong>\r\n          <textarea\r\n            id=\"stepDef\"\r\n            onChange={() => {}}\r\n            className=\"inputTxtarea\"\r\n            value={generatedCode.join(\"\")}\r\n          />\r\n        </Col>\r\n\r\n        <Col>\r\n          <br />\r\n          <strong>Nicknames/Locators File</strong>\r\n          <textarea\r\n            id=\"locators\"\r\n            onChange={() => {}}\r\n            className=\"inputTxtarea\"\r\n            value={locaters.join(\"\").slice(0, -2)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Feature2StepDef;\r\n","import { Navbar, Nav, Container } from \"react-bootstrap\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Outlet\n} from \"react-router-dom\";\nimport Routing from \"./pathInfo\";\nimport DataGrid from \"./components/DataGrid\";\nimport Keyboard from \"./components/Keyboard\";\nimport Learn from \"./components/Learn\";\nimport Feature2StepDef from \"./components/Feature2StepDef\";\n\nconst GLayout = () => {\n  const NavItems = Routing.map(\n    ({ path, component: Comp, exact, name }, key) => (\n      <Nav.Link key={`nav_${key}`} href={path}>\n        {name}\n      </Nav.Link>\n    )\n  );\n  return (\n    <div>\n      <Navbar collapseOnSelect fixed=\"top\" expand=\"sm\" bg=\"dark\">\n        <Container>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav>{NavItems}</Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Outlet />\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<GLayout />}>\n          <Route path=\"DataGrid\" element={<DataGrid />} />\n          <Route path=\"Keyboard\" element={<Keyboard />} />\n          <Route path=\"Learn\" element={<Learn />} />\n          <Route path=\"Feature2StepDef\" element={<Feature2StepDef />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}